{
  "address": "0x7e7EdCf617B79893043e92Cd47EAFb37686046dE",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "FeeDistributed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "title",
          "type": "string"
        }
      ],
      "name": "ProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "ProposalExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lockPeriod",
          "type": "uint256"
        }
      ],
      "name": "Staked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensBurned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Unstaked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "support",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "votes",
          "type": "uint256"
        }
      ],
      "name": "VoteCast",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimFeeRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "collectFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        }
      ],
      "name": "createProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "distributeFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_proposalId",
          "type": "uint256"
        }
      ],
      "name": "executeProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeDistributionInterval",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_proposalId",
          "type": "uint256"
        }
      ],
      "name": "getProposal",
      "outputs": [
        {
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "againstVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserStakes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalStakedAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "activeStakes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalVotingPower",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getVotingPower",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "hasVoted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastFeeDistribution",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextProposalId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "platformContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalDuration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "againstVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_platform",
          "type": "address"
        }
      ],
      "name": "setPlatformContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_lockPeriod",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalFeesCollected",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "totalStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_stakeIndex",
          "type": "uint256"
        }
      ],
      "name": "unstake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userFeeShare",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userStakes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lockPeriod",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_proposalId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_support",
          "type": "bool"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingPowerThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x3c0ad296ebe44980de5b60db2db7a898c8a6a3935c0cdfd919eed0a38d3f9936",
  "receipt": {
    "to": null,
    "from": "0xA889121299B61D09A75088CEc84D4Fc2E76D2ed7",
    "contractAddress": "0x7e7EdCf617B79893043e92Cd47EAFb37686046dE",
    "transactionIndex": 0,
    "gasUsed": "2033833",
    "logsBloom": "0x
    "blockHash": "0x0002ccd00000050f72cb13f64d655dd78d2b6ae2c489ecc46aa4651d89ea692f",
    "transactionHash": "0x3c0ad296ebe44980de5b60db2db7a898c8a6a3935c0cdfd919eed0a38d3f9936",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 60317139,
        "transactionHash": "0x3c0ad296ebe44980de5b60db2db7a898c8a6a3935c0cdfd919eed0a38d3f9936",
        "address": "0x7e7EdCf617B79893043e92Cd47EAFb37686046dE",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000a889121299b61d09a75088cec84d4fc2e76d2ed7"
        ],
        "data": "0x0000000000000000000000000000000000000000033b2e3c9fd0803ce8000000",
        "logIndex": 0,
        "blockHash": "0x0002ccd00000050f72cb13f64d655dd78d2b6ae2c489ecc46aa4651d89ea692f"
      }
    ],
    "blockNumber": 60317139,
    "cumulativeGasUsed": "2033833",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "0ada7a5da3d26f26d8ea40f0e25e5925",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FeeDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockPeriod\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"support\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimFeeRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"collectFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"createProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributeFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"executeProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeDistributionInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposal\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserStakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalStakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"activeStakes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalVotingPower\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getVotingPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"hasVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastFeeDistribution\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextProposalId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_platform\",\"type\":\"address\"}],\"name\":\"setPlatformContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lockPeriod\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFeesCollected\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_stakeIndex\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userFeeShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userStakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockPeriod\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_support\",\"type\":\"bool\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingPowerThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"SafeNest Team\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"Approve spender\"},\"burn(uint256)\":{\"notice\":\"Burn tokens\"},\"claimFeeRewards()\":{\"notice\":\"Claim fee rewards\"},\"collectFees(uint256)\":{\"notice\":\"Collect platform fees (only platform contract)\"},\"createProposal(string,string)\":{\"notice\":\"Create governance proposal\"},\"distributeFees()\":{\"notice\":\"Distribute fees to token holders (simplified)\"},\"executeProposal(uint256)\":{\"notice\":\"Execute proposal (if passed)\"},\"getProposal(uint256)\":{\"notice\":\"Get proposal details\"},\"getUserStakes(address)\":{\"notice\":\"Get user's staking info\"},\"getVotingPower(address)\":{\"notice\":\"Get user's voting power\"},\"mint(address,uint256)\":{\"notice\":\"Mint tokens (only platform can mint as rewards)\"},\"setPlatformContract(address)\":{\"notice\":\"Set platform contract address\"},\"stake(uint256,uint256)\":{\"notice\":\"Stake tokens for governance power\"},\"transfer(address,uint256)\":{\"notice\":\"Transfer tokens\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer from (for allowances)\"},\"unstake(uint256)\":{\"notice\":\"Unstake tokens (after lock period)\"},\"vote(uint256,bool)\":{\"notice\":\"Vote on proposal\"}},\"notice\":\"INCL Token - Governance token for MicroSavings platform Enables community governance and fee sharing\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/INCLToken.sol\":\"INCLToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/INCLToken.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity >=0.8.0 <0.9.0;\\r\\n\\r\\n// import \\\"hardhat/console.sol\\\";\\r\\n\\r\\n/**\\r\\n * INCL Token - Governance token for MicroSavings platform\\r\\n * Enables community governance and fee sharing\\r\\n * @author SafeNest Team\\r\\n */\\r\\ncontract INCLToken {\\r\\n    // Token details\\r\\n    string public name = \\\"Inclusive Finance Token\\\";\\r\\n    string public symbol = \\\"INCL\\\";\\r\\n    uint8 public decimals = 18;\\r\\n    uint256 public totalSupply;\\r\\n    \\r\\n    // Owner and platform\\r\\n    address public immutable owner;\\r\\n    address public platformContract;\\r\\n    \\r\\n    // Balances and allowances\\r\\n    mapping(address => uint256) public balanceOf;\\r\\n    mapping(address => mapping(address => uint256)) public allowance;\\r\\n    \\r\\n    // Staking for governance\\r\\n    struct Stake {\\r\\n        uint256 amount;\\r\\n        uint256 timestamp;\\r\\n        uint256 lockPeriod;\\r\\n        bool isActive;\\r\\n    }\\r\\n    \\r\\n    mapping(address => Stake[]) public userStakes;\\r\\n    mapping(address => uint256) public totalStaked;\\r\\n    \\r\\n    // Governance\\r\\n    struct Proposal {\\r\\n        uint256 id;\\r\\n        address proposer;\\r\\n        string title;\\r\\n        string description;\\r\\n        uint256 forVotes;\\r\\n        uint256 againstVotes;\\r\\n        uint256 startTime;\\r\\n        uint256 endTime;\\r\\n        bool executed;\\r\\n        bool isActive;\\r\\n    }\\r\\n    \\r\\n    mapping(uint256 => Proposal) public proposals;\\r\\n    mapping(address => mapping(uint256 => bool)) public hasVoted;\\r\\n    uint256 public nextProposalId = 1;\\r\\n    uint256 public votingPowerThreshold = 1000 * 10**18; // 1000 INCL tokens\\r\\n    uint256 public proposalDuration = 3 days;\\r\\n    \\r\\n    // Fee sharing\\r\\n    uint256 public totalFeesCollected = 0;\\r\\n    mapping(address => uint256) public userFeeShare;\\r\\n    uint256 public lastFeeDistribution = 0;\\r\\n    uint256 public feeDistributionInterval = 7 days;\\r\\n    \\r\\n    // Events\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n    event TokensMinted(address indexed to, uint256 amount);\\r\\n    event TokensBurned(address indexed from, uint256 amount);\\r\\n    event Staked(address indexed user, uint256 amount, uint256 lockPeriod);\\r\\n    event Unstaked(address indexed user, uint256 amount);\\r\\n    event ProposalCreated(uint256 indexed proposalId, address indexed proposer, string title);\\r\\n    event VoteCast(address indexed voter, uint256 indexed proposalId, bool support, uint256 votes);\\r\\n    event ProposalExecuted(uint256 indexed proposalId);\\r\\n    event FeeDistributed(address indexed user, uint256 amount);\\r\\n    \\r\\n    // Modifiers\\r\\n    modifier onlyOwner() {\\r\\n        require(msg.sender == owner, \\\"Not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n    \\r\\n    modifier onlyPlatform() {\\r\\n        require(msg.sender == platformContract, \\\"Not the platform contract\\\");\\r\\n        _;\\r\\n    }\\r\\n    \\r\\n    modifier validAmount(uint256 _amount) {\\r\\n        require(_amount > 0, \\\"Amount must be greater than 0\\\");\\r\\n        _;\\r\\n    }\\r\\n    \\r\\n    // Constructor\\r\\n    constructor() {\\r\\n        owner = msg.sender;\\r\\n        totalSupply = 1000000000 * 10**18; // 1 billion tokens\\r\\n        balanceOf[msg.sender] = totalSupply;\\r\\n        emit Transfer(address(0), msg.sender, totalSupply);\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * Set platform contract address\\r\\n     */\\r\\n    function setPlatformContract(address _platform) external onlyOwner {\\r\\n        platformContract = _platform;\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * Transfer tokens\\r\\n     */\\r\\n    function transfer(address _to, uint256 _value) external returns (bool) {\\r\\n        require(balanceOf[msg.sender] >= _value, \\\"Insufficient balance\\\");\\r\\n        require(_to != address(0), \\\"Invalid recipient\\\");\\r\\n        \\r\\n        balanceOf[msg.sender] -= _value;\\r\\n        balanceOf[_to] += _value;\\r\\n        \\r\\n        emit Transfer(msg.sender, _to, _value);\\r\\n        return true;\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * Approve spender\\r\\n     */\\r\\n    function approve(address _spender, uint256 _value) external returns (bool) {\\r\\n        allowance[msg.sender][_spender] = _value;\\r\\n        emit Approval(msg.sender, _spender, _value);\\r\\n        return true;\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * Transfer from (for allowances)\\r\\n     */\\r\\n    function transferFrom(address _from, address _to, uint256 _value) external returns (bool) {\\r\\n        require(balanceOf[_from] >= _value, \\\"Insufficient balance\\\");\\r\\n        require(allowance[_from][msg.sender] >= _value, \\\"Insufficient allowance\\\");\\r\\n        require(_to != address(0), \\\"Invalid recipient\\\");\\r\\n        \\r\\n        balanceOf[_from] -= _value;\\r\\n        balanceOf[_to] += _value;\\r\\n        allowance[_from][msg.sender] -= _value;\\r\\n        \\r\\n        emit Transfer(_from, _to, _value);\\r\\n        return true;\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * Mint tokens (only platform can mint as rewards)\\r\\n     */\\r\\n    function mint(address _to, uint256 _amount) external onlyPlatform validAmount(_amount) {\\r\\n        totalSupply += _amount;\\r\\n        balanceOf[_to] += _amount;\\r\\n        emit TokensMinted(_to, _amount);\\r\\n        emit Transfer(address(0), _to, _amount);\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * Burn tokens\\r\\n     */\\r\\n    function burn(uint256 _amount) external validAmount(_amount) {\\r\\n        require(balanceOf[msg.sender] >= _amount, \\\"Insufficient balance\\\");\\r\\n        \\r\\n        balanceOf[msg.sender] -= _amount;\\r\\n        totalSupply -= _amount;\\r\\n        emit TokensBurned(msg.sender, _amount);\\r\\n        emit Transfer(msg.sender, address(0), _amount);\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * Stake tokens for governance power\\r\\n     */\\r\\n    function stake(uint256 _amount, uint256 _lockPeriod) external validAmount(_amount) {\\r\\n        require(balanceOf[msg.sender] >= _amount, \\\"Insufficient balance\\\");\\r\\n        require(_lockPeriod >= 30 days, \\\"Minimum lock period is 30 days\\\");\\r\\n        require(_lockPeriod <= 365 days, \\\"Maximum lock period is 365 days\\\");\\r\\n        \\r\\n        balanceOf[msg.sender] -= _amount;\\r\\n        totalStaked[msg.sender] += _amount;\\r\\n        \\r\\n        userStakes[msg.sender].push(Stake({\\r\\n            amount: _amount,\\r\\n            timestamp: block.timestamp,\\r\\n            lockPeriod: _lockPeriod,\\r\\n            isActive: true\\r\\n        }));\\r\\n        \\r\\n        emit Staked(msg.sender, _amount, _lockPeriod);\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * Unstake tokens (after lock period)\\r\\n     */\\r\\n    function unstake(uint256 _stakeIndex) external {\\r\\n        require(_stakeIndex < userStakes[msg.sender].length, \\\"Invalid stake index\\\");\\r\\n        \\r\\n        Stake storage userStake = userStakes[msg.sender][_stakeIndex];\\r\\n        require(userStake.isActive, \\\"Stake not active\\\");\\r\\n        require(\\r\\n            block.timestamp >= userStake.timestamp + userStake.lockPeriod,\\r\\n            \\\"Stake still locked\\\"\\r\\n        );\\r\\n        \\r\\n        userStake.isActive = false;\\r\\n        totalStaked[msg.sender] -= userStake.amount;\\r\\n        balanceOf[msg.sender] += userStake.amount;\\r\\n        \\r\\n        emit Unstaked(msg.sender, userStake.amount);\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * Get user's voting power\\r\\n     */\\r\\n    function getVotingPower(address _user) external view returns (uint256) {\\r\\n        uint256 power = 0;\\r\\n        \\r\\n        for (uint256 i = 0; i < userStakes[msg.sender].length; i++) {\\r\\n            if (userStakes[msg.sender][i].isActive) {\\r\\n                // Longer lock periods give more voting power\\r\\n                uint256 multiplier = 100 + (userStakes[msg.sender][i].lockPeriod / 30 days) * 10;\\r\\n                power += userStakes[msg.sender][i].amount * multiplier / 100;\\r\\n            }\\r\\n        }\\r\\n        \\r\\n        return power;\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * Create governance proposal\\r\\n     */\\r\\n    function createProposal(\\r\\n        string memory _title,\\r\\n        string memory _description\\r\\n    ) external {\\r\\n        require(totalStaked[msg.sender] >= votingPowerThreshold, \\\"Insufficient voting power\\\");\\r\\n        \\r\\n        proposals[nextProposalId] = Proposal({\\r\\n            id: nextProposalId,\\r\\n            proposer: msg.sender,\\r\\n            title: _title,\\r\\n            description: _description,\\r\\n            forVotes: 0,\\r\\n            againstVotes: 0,\\r\\n            startTime: block.timestamp,\\r\\n            endTime: block.timestamp + proposalDuration,\\r\\n            executed: false,\\r\\n            isActive: true\\r\\n        });\\r\\n        \\r\\n        emit ProposalCreated(nextProposalId, msg.sender, _title);\\r\\n        nextProposalId++;\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * Vote on proposal\\r\\n     */\\r\\n    function vote(uint256 _proposalId, bool _support) external {\\r\\n        Proposal storage proposal = proposals[_proposalId];\\r\\n        require(proposal.isActive, \\\"Proposal not active\\\");\\r\\n        require(block.timestamp <= proposal.endTime, \\\"Voting period ended\\\");\\r\\n        require(!hasVoted[msg.sender][_proposalId], \\\"Already voted\\\");\\r\\n        \\r\\n        uint256 votingPower = this.getVotingPower(msg.sender);\\r\\n        require(votingPower > 0, \\\"No voting power\\\");\\r\\n        \\r\\n        hasVoted[msg.sender][_proposalId] = true;\\r\\n        \\r\\n        if (_support) {\\r\\n            proposal.forVotes += votingPower;\\r\\n        } else {\\r\\n            proposal.againstVotes += votingPower;\\r\\n        }\\r\\n        \\r\\n        emit VoteCast(msg.sender, _proposalId, _support, votingPower);\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * Execute proposal (if passed)\\r\\n     */\\r\\n    function executeProposal(uint256 _proposalId) external {\\r\\n        Proposal storage proposal = proposals[_proposalId];\\r\\n        require(proposal.isActive, \\\"Proposal not active\\\");\\r\\n        require(block.timestamp > proposal.endTime, \\\"Voting period not ended\\\");\\r\\n        require(!proposal.executed, \\\"Proposal already executed\\\");\\r\\n        require(proposal.forVotes > proposal.againstVotes, \\\"Proposal not passed\\\");\\r\\n        \\r\\n        proposal.executed = true;\\r\\n        proposal.isActive = false;\\r\\n        \\r\\n        emit ProposalExecuted(_proposalId);\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * Collect platform fees (only platform contract)\\r\\n     */\\r\\n    function collectFees(uint256 _amount) external onlyPlatform {\\r\\n        totalFeesCollected += _amount;\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * Distribute fees to token holders (simplified)\\r\\n     */\\r\\n    function distributeFees() external {\\r\\n        require(\\r\\n            block.timestamp >= lastFeeDistribution + feeDistributionInterval,\\r\\n            \\\"Distribution interval not met\\\"\\r\\n        );\\r\\n        \\r\\n        // Simplified fee distribution - in production, implement proper staker iteration\\r\\n        lastFeeDistribution = block.timestamp;\\r\\n        totalFeesCollected = 0;\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * Claim fee rewards\\r\\n     */\\r\\n    function claimFeeRewards() external {\\r\\n        uint256 rewards = userFeeShare[msg.sender];\\r\\n        require(rewards > 0, \\\"No rewards to claim\\\");\\r\\n        \\r\\n        userFeeShare[msg.sender] = 0;\\r\\n        balanceOf[msg.sender] += rewards;\\r\\n        \\r\\n        emit Transfer(address(0), msg.sender, rewards);\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * Get proposal details\\r\\n     */\\r\\n    function getProposal(uint256 _proposalId) external view returns (\\r\\n        address proposer,\\r\\n        string memory title,\\r\\n        string memory description,\\r\\n        uint256 forVotes,\\r\\n        uint256 againstVotes,\\r\\n        uint256 startTime,\\r\\n        uint256 endTime,\\r\\n        bool executed,\\r\\n        bool isActive\\r\\n    ) {\\r\\n        Proposal memory proposal = proposals[_proposalId];\\r\\n        return (\\r\\n            proposal.proposer,\\r\\n            proposal.title,\\r\\n            proposal.description,\\r\\n            proposal.forVotes,\\r\\n            proposal.againstVotes,\\r\\n            proposal.startTime,\\r\\n            proposal.endTime,\\r\\n            proposal.executed,\\r\\n            proposal.isActive\\r\\n        );\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * Get user's staking info\\r\\n     */\\r\\n    function getUserStakes(address _user) external view returns (\\r\\n        uint256 totalStakedAmount,\\r\\n        uint256 activeStakes,\\r\\n        uint256 totalVotingPower\\r\\n    ) {\\r\\n        totalStakedAmount = totalStaked[_user];\\r\\n        activeStakes = 0;\\r\\n        totalVotingPower = 0;\\r\\n        \\r\\n        for (uint256 i = 0; i < userStakes[_user].length; i++) {\\r\\n            if (userStakes[_user][i].isActive) {\\r\\n                activeStakes++;\\r\\n                uint256 multiplier = 100 + (userStakes[_user][i].lockPeriod / 30 days) * 10;\\r\\n                totalVotingPower += userStakes[_user][i].amount * multiplier / 100;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x6f5acc066c86285946698c84891b26efe75592091f4ce17dfcdfaf1e041f2cca\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a0604052346200016c57600062000018815462000171565b601f81116200013f575b507f496e636c75736976652046696e616e636520546f6b656e00000000000000002e815560018054620000559062000171565b601f811162000110575b50600863125390d360e21b018155601260ff196002541617600255600b55683635c9adc5dea00000600c556203f480600d5580600e558060105562093a80601155336080526b033b2e3c9fd0803ce8000000908160035533815260056020528160408220556040519182527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203393a3604051611f1a9081620001af823960805181818161080101526109cc0152f35b81835281601f60208520920160051c8201915b828110620001335750506200005f565b84815501829062000123565b818052601f60208320910160051c8101905b81811062000160575062000022565b82815560010162000151565b600080fd5b90600182811c92168015620001a3575b60208310146200018d57565b634e487b7160e01b600052602260045260246000fd5b91607f16916200018156fe6080604052600436101561001257600080fd5b60003560e01c8063013cf08b14611a4b57806306fdde03146119a8578063095ea7b31461192f5780630d61b519146117dc5780631508c63f146117be578063162746951461179557806318160ddd1461177757806323b872dd146116455780632ab09d14146116275780632e17de78146114a05780633010996214611482578063313ce5671461146157806331b88af21461142757806340c10f1914611379578063425458251461132c57806342966c6814611283578063504850b31461126557806360484f1b146111bf57806360c6d8ae146111a157806365e481e214610d5057806370a0823114610d165780637b0472f014610af9578063842e2981146109fb5780638da5cb5b146109b657806395d89b41146108d35780639bfd8d61146108995780639e6cb6421461087b578063a44760f2146107dd578063a9059cbb14610736578063b17acdcd146106fd578063b5d5b5fa14610682578063bb4d44361461058f578063bb57ad2014610519578063c7f758a814610402578063c9d27afe146101fe5763dd62ed3e146101a857600080fd5b346101f95760403660031901126101f9576101c1611c76565b6101c9611c8c565b9060018060a01b038091166000526006602052604060002091166000526020526020604060002054604051908152f35b600080fd5b346101f95760403660031901126101f957600435602435801515908181036101f95782600052602060098152604060002061024260ff600883015460081c16611e82565b600781015442116103c75733600052600a8252604060002085600052825260ff6040600020541661039257604051635da6a21b60e11b8152336004820152928284602481305afa93841561038657600094610357575b5083156103205733600052600a835260406000208660005283526040600020600160ff1982541617905560001461030b576004016102d7838254611dbb565b90555b6040519283528201527f877856338e13f63d0c36822ff0ef736b80934cd90574a3a5bc9262c39d217c4660403392a3005b600501610319838254611dbb565b90556102da565b60405162461bcd60e51b815260048101849052600f60248201526e2737903b37ba34b733903837bbb2b960891b6044820152606490fd5b9093508281813d831161037f575b61036f8183611b6e565b810103126101f957519286610298565b503d610365565b6040513d6000823e3d90fd5b60405162461bcd60e51b815260048101839052600d60248201526c105b1c9958591e481d9bdd1959609a1b6044820152606490fd5b60405162461bcd60e51b8152600481018390526013602482015272159bdd1a5b99c81c195c9a5bd908195b991959606a1b6044820152606490fd5b346101f95760203660031901126101f9576004356000526009602052602060406000206040519061043282611b51565b8054825260018101546001600160a01b03908116848401908152909261045a60028401611b90565b936040820194855261046e60038501611b90565b9384606084015260048101549485608085015260058201548060a08601526104f86006840154928360c08801526104ea60086007870154968760e08b015201549760ff891615159760ff6101009a8a8c85015260081c1615159a8b6101208094015251169b5190806040519e8f9e8f90815201528c0190611c36565b908a820360408c0152611c36565b966060890152608088015260a087015260c086015260e08501528301520390f35b346101f95760003660031901126101f95761053960105460115490611dbb565b421061054a57426010556000600e55005b60405162461bcd60e51b815260206004820152601d60248201527f446973747269627574696f6e20696e74657276616c206e6f74206d65740000006044820152606490fd5b346101f9576020806003193601126101f9576105a9611c76565b506000805b336000526007808452604060002080548310156106775760036105d38460ff93611cf9565b500154166105eb575b506105e690611e60565b6105ae565b90913360005281845262278d006002610608856040600020611cf9565b5001540490600a91828102928184041490151715610661576064918201918281116106615761065361065a936105e69533600052885261064c876040600020611cf9565b5054611e6f565b0490611dbb565b91906105dc565b634e487b7160e01b600052601160045260246000fd5b505050604051908152f35b346101f95760403660031901126101f95761069b611c76565b6001600160a01b03166000908152600760205260409020805460243591908210156101f9576080916106cc91611cf9565b5080549060018101549060ff6003600283015492015416916040519384526020840152604083015215156060820152f35b346101f95760203660031901126101f95761072360018060a01b03600454163314611dc8565b610731600435600e54611dbb565b600e55005b346101f95760403660031901126101f95761074f611c76565b6024359033600052600560205261076d826040600020541015611d2b565b6001600160a01b031690610782821515611d6e565b336000526005602052604060002061079b828254611dae565b905581600052600560205260406000206107b6828254611dbb565b9055604051908152600080516020611ec583398151915260203392a3602060405160018152f35b346101f95760203660031901126101f9576107f6611c76565b6001600160a01b03907f00000000000000000000000000000000000000000000000000000000000000008216330361084657166bffffffffffffffffffffffff60a01b6004541617600455600080f35b60405162461bcd60e51b815260206004820152600d60248201526c2737ba103a34329037bbb732b960991b6044820152606490fd5b346101f95760003660031901126101f9576020600c54604051908152f35b346101f95760203660031901126101f9576001600160a01b036108ba611c76565b1660005260086020526020604060002054604051908152f35b346101f95760003660031901126101f957604051600060018054906108f782611b17565b8085529181811690811561098f5750600114610936575b6109328461091e81860382611b6e565b604051918291602083526020830190611c36565b0390f35b600081815292507fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b82841061097757505050810160200161091e8261090e565b8054602085870181019190915290930192810161095f565b60ff191660208087019190915292151560051b8501909201925061091e915083905061090e565b346101f95760003660031901126101f9576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346101f9576020806003193601126101f957610a15611c76565b6001600160a01b031660008181526008835260408120549290918290815b81600052600780855260406000208054831015610ae3576003610a588460ff93611cf9565b50015416610a70575b50610a6b90611e60565b610a33565b909294610a7c90611e60565b948260005281855262278d006002610a98866040600020611cf9565b5001540490600a918281029281840414901517156106615760649182019182811161066157610653610adc93610a6b9587600052895261064c886040600020611cf9565b9290610a61565b6060888689896040519384528301526040820152f35b346101f95760403660031901126101f9576004356024803590610b1d831515611e14565b3360005260209060058252610b39846040600020541015611d2b565b62278d008310610cd3576301e133808311610c905733600052600582526040600020610b66858254611dae565b905533600052600882526040600020610b80858254611dbb565b9055336000526007825260406000206040516080810181811067ffffffffffffffff821117610c7b57604052858152838101428152604082019186835260608101936001855280549068010000000000000000821015610c665790610bea91600182018155611cf9565b959095610c52575091610c2194939160039351855551600185015551600284015551151591019060ff801983541691151516179055565b6040519283528201527f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee9060403392a2005b634e487b7160e01b60005260006004526000fd5b86634e487b7160e01b60005260416004526000fd5b83634e487b7160e01b60005260416004526000fd5b90601f6064926040519262461bcd60e51b845260048401528201527f4d6178696d756d206c6f636b20706572696f64206973203336352064617973006044820152fd5b90601e6064926040519262461bcd60e51b845260048401528201527f4d696e696d756d206c6f636b20706572696f64206973203330206461797300006044820152fd5b346101f95760203660031901126101f9576001600160a01b03610d37611c76565b1660005260056020526020604060002054604051908152f35b346101f95760403660031901126101f95760043567ffffffffffffffff81116101f957610d81903690600401611ca2565b60243567ffffffffffffffff81116101f957610da1903690600401611ca2565b90336000526008602052604060002054600c541161115c57600b54610dc8600d5442611dbb565b60405193610dd585611b51565b828552336020860152836040860152606085015260006080850152600060a08501524260c085015260e0840152600061010084015260016101208401526000526009602052604060002090825182556001820160018060a01b036020850151166bffffffffffffffffffffffff60a01b825416179055604083015192835167ffffffffffffffff811161108557610e6f6002850154611b17565b601f8111611115575b506020601f82116001146110a657819293949560009261109b575b50508160011b916000199060031b1c19161760028401555b606081015192835167ffffffffffffffff811161108557610ecf6003830154611b17565b601f811161103e575b506020601f8211600114610fc657918160089261012094610fb698600092610fbb575b50508160011b916000199060031b1c19161760038201555b6080840151600482015560a0840151600582015560c0840151600682015560e084015160078201550191610f5a6101008201511515849060ff801983541691151516179055565b0151151561ff0082549160081b169061ff001916179055600b5490817f7585f467599d0f008985f231af99293be388626ac16ca59505c2f8f88969cd636040516020815280610fae33956020830190611c36565b0390a3611e60565b600b55005b015190508880610efb565b6003830160005260206000209560005b601f1984168110611026575082610fb6976101209593600193600896601f1981161061100d575b505050811b016003820155610f13565b015160001960f88460031b161c19169055888080610ffd565b82820151885560019097019660209283019201610fd6565b600383016000526020600020601f830160051c81016020841061107e575b601f830160051c82018110611072575050610ed8565b6000815560010161105c565b508061105c565b634e487b7160e01b600052604160045260246000fd5b015190508580610e93565b6002850160005260206000209060005b601f19841681106110fd575060019394959683601f198116106110e4575b505050811b016002840155610eab565b015160001960f88460031b161c191690558580806110d4565b9091602060018192858b0151815501930191016110b6565b600285016000526020600020601f830160051c810160208410611155575b601f830160051c82018110611149575050610e78565b60008155600101611133565b5080611133565b60405162461bcd60e51b815260206004820152601960248201527f496e73756666696369656e7420766f74696e6720706f776572000000000000006044820152606490fd5b346101f95760003660031901126101f9576020600e54604051908152f35b346101f95760003660031901126101f95733600052600f602052604060002054801561122a5733600052600f602052600060408120556005602052604060002061120a828254611dbb565b90556040519081526000600080516020611ec583398151915260203393a3005b60405162461bcd60e51b81526020600482015260136024820152724e6f207265776172647320746f20636c61696d60681b6044820152606490fd5b346101f95760003660031901126101f9576020601154604051908152f35b346101f95760203660031901126101f95760006004356112a4811515611e14565b33825260056020526112bc8160408420541015611d2b565b3382526005602052604082206112d3828254611dae565b90556112e181600354611dae565b6003556040518181527ffd38818f5291bf0bb3a2a48aadc06ba8757865d1dabd804585338aab3009dcb660203392a2604051908152600080516020611ec583398151915260203392a3005b346101f95760403660031901126101f9576001600160a01b0361134d611c76565b16600052600a6020526040600020602435600052602052602060ff604060002054166040519015158152f35b346101f95760403660031901126101f957611392611c76565b6000600080516020611ec583398151915260206024359360018060a01b03906113c082600454163314611dc8565b6113cb861515611e14565b6113d786600354611dbb565b600355169384845260058252604084206113f2828254611dbb565b9055847f3f2c9d57c068687834f0de942a9babb9e5acab57d516d3480a3c16ee165a427383604051848152a2604051908152a3005b346101f95760203660031901126101f9576001600160a01b03611448611c76565b16600052600f6020526020604060002054604051908152f35b346101f95760003660031901126101f957602060ff60025416604051908152f35b346101f95760003660031901126101f9576020600d54604051908152f35b346101f9576020806003193601126101f95760043533600052600782526040600020548110156115ec576114e09033600052600783526040600020611cf9565b5090600382019182549260ff8416156115b4576115066001830154600284015490611dbb565b421061157a577f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75929360ff191690558054336000526008845261154f6040600020918254611dae565b90558054336000526005845261156b6040600020918254611dbb565b905554916040519283523392a2005b60405162461bcd60e51b815260048101849052601260248201527114dd185ad9481cdd1a5b1b081b1bd8dad95960721b6044820152606490fd5b60405162461bcd60e51b815260048101849052601060248201526f5374616b65206e6f742061637469766560801b6044820152606490fd5b60405162461bcd60e51b8152600481018390526013602482015272092dcecc2d8d2c840e6e8c2d6ca40d2dcc8caf606b1b6044820152606490fd5b346101f95760003660031901126101f9576020600b54604051908152f35b346101f95760603660031901126101f95761165e611c76565b611666611c8c565b906044359060018060a01b03809116908160005260209360058552611692846040600020541015611d2b565b82600052600685526040600020336000528552836040600020541061173957600080516020611ec583398151915291859116936116d0851515611d6e565b836000526005825260406000206116e8828254611dae565b905584600052600582526040600020611702828254611dbb565b9055836000526006825260406000203360005282526040600020611727828254611dae565b9055604051908152a360405160018152f35b60405162461bcd60e51b8152600481018690526016602482015275496e73756666696369656e7420616c6c6f77616e636560501b6044820152606490fd5b346101f95760003660031901126101f9576020600354604051908152f35b346101f95760003660031901126101f9576004546040516001600160a01b039091168152602090f35b346101f95760003660031901126101f9576020601054604051908152f35b346101f95760203660031901126101f9576004358060005260096020526040600020600881019081549061181560ff8360081c16611e82565b60078101544211156118ea5760ff82166118a55760056004820154910154101561186a5761ffff191660011790557f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f600080a2005b60405162461bcd60e51b8152602060048201526013602482015272141c9bdc1bdcd85b081b9bdd081c185cdcd959606a1b6044820152606490fd5b60405162461bcd60e51b815260206004820152601960248201527f50726f706f73616c20616c7265616479206578656375746564000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601760248201527f566f74696e6720706572696f64206e6f7420656e6465640000000000000000006044820152606490fd5b346101f95760403660031901126101f957611948611c76565b60243533600052600660205260406000209160018060a01b03169182600052602052806040600020556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b346101f95760003660031901126101f957604051600080546119c981611b17565b8084529060019081811690811561098f57506001146119f2576109328461091e81860382611b6e565b600080805292507f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b828410611a3357505050810160200161091e8261090e565b80546020858701810191909152909301928101611a1b565b346101f95760203660031901126101f9576004356000908152600960205260409020805460018201546001600160a01b03169160ff611a8c60028301611b90565b611a9860038401611b90565b926004810154936005820154611ae7600684015492611ad960086007870154960154966040519b8c9b8c5260208c01526101408060408d01528b0190611c36565b9089820360608b0152611c36565b95608088015260a087015260c086015260e0850152818116151561010085015260081c1615156101208301520390f35b90600182811c92168015611b47575b6020831014611b3157565b634e487b7160e01b600052602260045260246000fd5b91607f1691611b26565b610140810190811067ffffffffffffffff82111761108557604052565b90601f8019910116810190811067ffffffffffffffff82111761108557604052565b9060405191826000825492611ba484611b17565b908184526001948581169081600014611c135750600114611bd0575b5050611bce92500383611b6e565b565b9093915060005260209081600020936000915b818310611bfb575050611bce93508201013880611bc0565b85548884018501529485019487945091830191611be3565b915050611bce94506020925060ff191682840152151560051b8201013880611bc0565b919082519283825260005b848110611c62575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611c41565b600435906001600160a01b03821682036101f957565b602435906001600160a01b03821682036101f957565b81601f820112156101f95780359067ffffffffffffffff82116110855760405192611cd7601f8401601f191660200185611b6e565b828452602083830101116101f957816000926020809301838601378301015290565b8054821015611d155760005260206000209060021b0190600090565b634e487b7160e01b600052603260045260246000fd5b15611d3257565b60405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606490fd5b15611d7557565b60405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c9958da5c1a595b9d607a1b6044820152606490fd5b9190820391821161066157565b9190820180921161066157565b15611dcf57565b60405162461bcd60e51b815260206004820152601960248201527f4e6f742074686520706c6174666f726d20636f6e7472616374000000000000006044820152606490fd5b15611e1b57565b60405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606490fd5b60001981146106615760010190565b8181029291811591840414171561066157565b15611e8957565b60405162461bcd60e51b815260206004820152601360248201527250726f706f73616c206e6f742061637469766560681b6044820152606490fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220bcc04b0b02af9e03a68707c3576c42496100c8c1b5ac43be86418914b2392a2064736f6c63430008140033",
  "deployedBytecode": "0x6080604052600436101561001257600080fd5b60003560e01c8063013cf08b14611a4b57806306fdde03146119a8578063095ea7b31461192f5780630d61b519146117dc5780631508c63f146117be578063162746951461179557806318160ddd1461177757806323b872dd146116455780632ab09d14146116275780632e17de78146114a05780633010996214611482578063313ce5671461146157806331b88af21461142757806340c10f1914611379578063425458251461132c57806342966c6814611283578063504850b31461126557806360484f1b146111bf57806360c6d8ae146111a157806365e481e214610d5057806370a0823114610d165780637b0472f014610af9578063842e2981146109fb5780638da5cb5b146109b657806395d89b41146108d35780639bfd8d61146108995780639e6cb6421461087b578063a44760f2146107dd578063a9059cbb14610736578063b17acdcd146106fd578063b5d5b5fa14610682578063bb4d44361461058f578063bb57ad2014610519578063c7f758a814610402578063c9d27afe146101fe5763dd62ed3e146101a857600080fd5b346101f95760403660031901126101f9576101c1611c76565b6101c9611c8c565b9060018060a01b038091166000526006602052604060002091166000526020526020604060002054604051908152f35b600080fd5b346101f95760403660031901126101f957600435602435801515908181036101f95782600052602060098152604060002061024260ff600883015460081c16611e82565b600781015442116103c75733600052600a8252604060002085600052825260ff6040600020541661039257604051635da6a21b60e11b8152336004820152928284602481305afa93841561038657600094610357575b5083156103205733600052600a835260406000208660005283526040600020600160ff1982541617905560001461030b576004016102d7838254611dbb565b90555b6040519283528201527f877856338e13f63d0c36822ff0ef736b80934cd90574a3a5bc9262c39d217c4660403392a3005b600501610319838254611dbb565b90556102da565b60405162461bcd60e51b815260048101849052600f60248201526e2737903b37ba34b733903837bbb2b960891b6044820152606490fd5b9093508281813d831161037f575b61036f8183611b6e565b810103126101f957519286610298565b503d610365565b6040513d6000823e3d90fd5b60405162461bcd60e51b815260048101839052600d60248201526c105b1c9958591e481d9bdd1959609a1b6044820152606490fd5b60405162461bcd60e51b8152600481018390526013602482015272159bdd1a5b99c81c195c9a5bd908195b991959606a1b6044820152606490fd5b346101f95760203660031901126101f9576004356000526009602052602060406000206040519061043282611b51565b8054825260018101546001600160a01b03908116848401908152909261045a60028401611b90565b936040820194855261046e60038501611b90565b9384606084015260048101549485608085015260058201548060a08601526104f86006840154928360c08801526104ea60086007870154968760e08b015201549760ff891615159760ff6101009a8a8c85015260081c1615159a8b6101208094015251169b5190806040519e8f9e8f90815201528c0190611c36565b908a820360408c0152611c36565b966060890152608088015260a087015260c086015260e08501528301520390f35b346101f95760003660031901126101f95761053960105460115490611dbb565b421061054a57426010556000600e55005b60405162461bcd60e51b815260206004820152601d60248201527f446973747269627574696f6e20696e74657276616c206e6f74206d65740000006044820152606490fd5b346101f9576020806003193601126101f9576105a9611c76565b506000805b336000526007808452604060002080548310156106775760036105d38460ff93611cf9565b500154166105eb575b506105e690611e60565b6105ae565b90913360005281845262278d006002610608856040600020611cf9565b5001540490600a91828102928184041490151715610661576064918201918281116106615761065361065a936105e69533600052885261064c876040600020611cf9565b5054611e6f565b0490611dbb565b91906105dc565b634e487b7160e01b600052601160045260246000fd5b505050604051908152f35b346101f95760403660031901126101f95761069b611c76565b6001600160a01b03166000908152600760205260409020805460243591908210156101f9576080916106cc91611cf9565b5080549060018101549060ff6003600283015492015416916040519384526020840152604083015215156060820152f35b346101f95760203660031901126101f95761072360018060a01b03600454163314611dc8565b610731600435600e54611dbb565b600e55005b346101f95760403660031901126101f95761074f611c76565b6024359033600052600560205261076d826040600020541015611d2b565b6001600160a01b031690610782821515611d6e565b336000526005602052604060002061079b828254611dae565b905581600052600560205260406000206107b6828254611dbb565b9055604051908152600080516020611ec583398151915260203392a3602060405160018152f35b346101f95760203660031901126101f9576107f6611c76565b6001600160a01b03907f00000000000000000000000000000000000000000000000000000000000000008216330361084657166bffffffffffffffffffffffff60a01b6004541617600455600080f35b60405162461bcd60e51b815260206004820152600d60248201526c2737ba103a34329037bbb732b960991b6044820152606490fd5b346101f95760003660031901126101f9576020600c54604051908152f35b346101f95760203660031901126101f9576001600160a01b036108ba611c76565b1660005260086020526020604060002054604051908152f35b346101f95760003660031901126101f957604051600060018054906108f782611b17565b8085529181811690811561098f5750600114610936575b6109328461091e81860382611b6e565b604051918291602083526020830190611c36565b0390f35b600081815292507fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b82841061097757505050810160200161091e8261090e565b8054602085870181019190915290930192810161095f565b60ff191660208087019190915292151560051b8501909201925061091e915083905061090e565b346101f95760003660031901126101f9576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346101f9576020806003193601126101f957610a15611c76565b6001600160a01b031660008181526008835260408120549290918290815b81600052600780855260406000208054831015610ae3576003610a588460ff93611cf9565b50015416610a70575b50610a6b90611e60565b610a33565b909294610a7c90611e60565b948260005281855262278d006002610a98866040600020611cf9565b5001540490600a918281029281840414901517156106615760649182019182811161066157610653610adc93610a6b9587600052895261064c886040600020611cf9565b9290610a61565b6060888689896040519384528301526040820152f35b346101f95760403660031901126101f9576004356024803590610b1d831515611e14565b3360005260209060058252610b39846040600020541015611d2b565b62278d008310610cd3576301e133808311610c905733600052600582526040600020610b66858254611dae565b905533600052600882526040600020610b80858254611dbb565b9055336000526007825260406000206040516080810181811067ffffffffffffffff821117610c7b57604052858152838101428152604082019186835260608101936001855280549068010000000000000000821015610c665790610bea91600182018155611cf9565b959095610c52575091610c2194939160039351855551600185015551600284015551151591019060ff801983541691151516179055565b6040519283528201527f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee9060403392a2005b634e487b7160e01b60005260006004526000fd5b86634e487b7160e01b60005260416004526000fd5b83634e487b7160e01b60005260416004526000fd5b90601f6064926040519262461bcd60e51b845260048401528201527f4d6178696d756d206c6f636b20706572696f64206973203336352064617973006044820152fd5b90601e6064926040519262461bcd60e51b845260048401528201527f4d696e696d756d206c6f636b20706572696f64206973203330206461797300006044820152fd5b346101f95760203660031901126101f9576001600160a01b03610d37611c76565b1660005260056020526020604060002054604051908152f35b346101f95760403660031901126101f95760043567ffffffffffffffff81116101f957610d81903690600401611ca2565b60243567ffffffffffffffff81116101f957610da1903690600401611ca2565b90336000526008602052604060002054600c541161115c57600b54610dc8600d5442611dbb565b60405193610dd585611b51565b828552336020860152836040860152606085015260006080850152600060a08501524260c085015260e0840152600061010084015260016101208401526000526009602052604060002090825182556001820160018060a01b036020850151166bffffffffffffffffffffffff60a01b825416179055604083015192835167ffffffffffffffff811161108557610e6f6002850154611b17565b601f8111611115575b506020601f82116001146110a657819293949560009261109b575b50508160011b916000199060031b1c19161760028401555b606081015192835167ffffffffffffffff811161108557610ecf6003830154611b17565b601f811161103e575b506020601f8211600114610fc657918160089261012094610fb698600092610fbb575b50508160011b916000199060031b1c19161760038201555b6080840151600482015560a0840151600582015560c0840151600682015560e084015160078201550191610f5a6101008201511515849060ff801983541691151516179055565b0151151561ff0082549160081b169061ff001916179055600b5490817f7585f467599d0f008985f231af99293be388626ac16ca59505c2f8f88969cd636040516020815280610fae33956020830190611c36565b0390a3611e60565b600b55005b015190508880610efb565b6003830160005260206000209560005b601f1984168110611026575082610fb6976101209593600193600896601f1981161061100d575b505050811b016003820155610f13565b015160001960f88460031b161c19169055888080610ffd565b82820151885560019097019660209283019201610fd6565b600383016000526020600020601f830160051c81016020841061107e575b601f830160051c82018110611072575050610ed8565b6000815560010161105c565b508061105c565b634e487b7160e01b600052604160045260246000fd5b015190508580610e93565b6002850160005260206000209060005b601f19841681106110fd575060019394959683601f198116106110e4575b505050811b016002840155610eab565b015160001960f88460031b161c191690558580806110d4565b9091602060018192858b0151815501930191016110b6565b600285016000526020600020601f830160051c810160208410611155575b601f830160051c82018110611149575050610e78565b60008155600101611133565b5080611133565b60405162461bcd60e51b815260206004820152601960248201527f496e73756666696369656e7420766f74696e6720706f776572000000000000006044820152606490fd5b346101f95760003660031901126101f9576020600e54604051908152f35b346101f95760003660031901126101f95733600052600f602052604060002054801561122a5733600052600f602052600060408120556005602052604060002061120a828254611dbb565b90556040519081526000600080516020611ec583398151915260203393a3005b60405162461bcd60e51b81526020600482015260136024820152724e6f207265776172647320746f20636c61696d60681b6044820152606490fd5b346101f95760003660031901126101f9576020601154604051908152f35b346101f95760203660031901126101f95760006004356112a4811515611e14565b33825260056020526112bc8160408420541015611d2b565b3382526005602052604082206112d3828254611dae565b90556112e181600354611dae565b6003556040518181527ffd38818f5291bf0bb3a2a48aadc06ba8757865d1dabd804585338aab3009dcb660203392a2604051908152600080516020611ec583398151915260203392a3005b346101f95760403660031901126101f9576001600160a01b0361134d611c76565b16600052600a6020526040600020602435600052602052602060ff604060002054166040519015158152f35b346101f95760403660031901126101f957611392611c76565b6000600080516020611ec583398151915260206024359360018060a01b03906113c082600454163314611dc8565b6113cb861515611e14565b6113d786600354611dbb565b600355169384845260058252604084206113f2828254611dbb565b9055847f3f2c9d57c068687834f0de942a9babb9e5acab57d516d3480a3c16ee165a427383604051848152a2604051908152a3005b346101f95760203660031901126101f9576001600160a01b03611448611c76565b16600052600f6020526020604060002054604051908152f35b346101f95760003660031901126101f957602060ff60025416604051908152f35b346101f95760003660031901126101f9576020600d54604051908152f35b346101f9576020806003193601126101f95760043533600052600782526040600020548110156115ec576114e09033600052600783526040600020611cf9565b5090600382019182549260ff8416156115b4576115066001830154600284015490611dbb565b421061157a577f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75929360ff191690558054336000526008845261154f6040600020918254611dae565b90558054336000526005845261156b6040600020918254611dbb565b905554916040519283523392a2005b60405162461bcd60e51b815260048101849052601260248201527114dd185ad9481cdd1a5b1b081b1bd8dad95960721b6044820152606490fd5b60405162461bcd60e51b815260048101849052601060248201526f5374616b65206e6f742061637469766560801b6044820152606490fd5b60405162461bcd60e51b8152600481018390526013602482015272092dcecc2d8d2c840e6e8c2d6ca40d2dcc8caf606b1b6044820152606490fd5b346101f95760003660031901126101f9576020600b54604051908152f35b346101f95760603660031901126101f95761165e611c76565b611666611c8c565b906044359060018060a01b03809116908160005260209360058552611692846040600020541015611d2b565b82600052600685526040600020336000528552836040600020541061173957600080516020611ec583398151915291859116936116d0851515611d6e565b836000526005825260406000206116e8828254611dae565b905584600052600582526040600020611702828254611dbb565b9055836000526006825260406000203360005282526040600020611727828254611dae565b9055604051908152a360405160018152f35b60405162461bcd60e51b8152600481018690526016602482015275496e73756666696369656e7420616c6c6f77616e636560501b6044820152606490fd5b346101f95760003660031901126101f9576020600354604051908152f35b346101f95760003660031901126101f9576004546040516001600160a01b039091168152602090f35b346101f95760003660031901126101f9576020601054604051908152f35b346101f95760203660031901126101f9576004358060005260096020526040600020600881019081549061181560ff8360081c16611e82565b60078101544211156118ea5760ff82166118a55760056004820154910154101561186a5761ffff191660011790557f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f600080a2005b60405162461bcd60e51b8152602060048201526013602482015272141c9bdc1bdcd85b081b9bdd081c185cdcd959606a1b6044820152606490fd5b60405162461bcd60e51b815260206004820152601960248201527f50726f706f73616c20616c7265616479206578656375746564000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601760248201527f566f74696e6720706572696f64206e6f7420656e6465640000000000000000006044820152606490fd5b346101f95760403660031901126101f957611948611c76565b60243533600052600660205260406000209160018060a01b03169182600052602052806040600020556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b346101f95760003660031901126101f957604051600080546119c981611b17565b8084529060019081811690811561098f57506001146119f2576109328461091e81860382611b6e565b600080805292507f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b828410611a3357505050810160200161091e8261090e565b80546020858701810191909152909301928101611a1b565b346101f95760203660031901126101f9576004356000908152600960205260409020805460018201546001600160a01b03169160ff611a8c60028301611b90565b611a9860038401611b90565b926004810154936005820154611ae7600684015492611ad960086007870154960154966040519b8c9b8c5260208c01526101408060408d01528b0190611c36565b9089820360608b0152611c36565b95608088015260a087015260c086015260e0850152818116151561010085015260081c1615156101208301520390f35b90600182811c92168015611b47575b6020831014611b3157565b634e487b7160e01b600052602260045260246000fd5b91607f1691611b26565b610140810190811067ffffffffffffffff82111761108557604052565b90601f8019910116810190811067ffffffffffffffff82111761108557604052565b9060405191826000825492611ba484611b17565b908184526001948581169081600014611c135750600114611bd0575b5050611bce92500383611b6e565b565b9093915060005260209081600020936000915b818310611bfb575050611bce93508201013880611bc0565b85548884018501529485019487945091830191611be3565b915050611bce94506020925060ff191682840152151560051b8201013880611bc0565b919082519283825260005b848110611c62575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611c41565b600435906001600160a01b03821682036101f957565b602435906001600160a01b03821682036101f957565b81601f820112156101f95780359067ffffffffffffffff82116110855760405192611cd7601f8401601f191660200185611b6e565b828452602083830101116101f957816000926020809301838601378301015290565b8054821015611d155760005260206000209060021b0190600090565b634e487b7160e01b600052603260045260246000fd5b15611d3257565b60405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606490fd5b15611d7557565b60405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c9958da5c1a595b9d607a1b6044820152606490fd5b9190820391821161066157565b9190820180921161066157565b15611dcf57565b60405162461bcd60e51b815260206004820152601960248201527f4e6f742074686520706c6174666f726d20636f6e7472616374000000000000006044820152606490fd5b15611e1b57565b60405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606490fd5b60001981146106615760010190565b8181029291811591840414171561066157565b15611e8957565b60405162461bcd60e51b815260206004820152601360248201527250726f706f73616c206e6f742061637469766560681b6044820152606490fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220bcc04b0b02af9e03a68707c3576c42496100c8c1b5ac43be86418914b2392a2064736f6c63430008140033",
  "devdoc": {
    "author": "SafeNest Team",
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "approve(address,uint256)": {
        "notice": "Approve spender"
      },
      "burn(uint256)": {
        "notice": "Burn tokens"
      },
      "claimFeeRewards()": {
        "notice": "Claim fee rewards"
      },
      "collectFees(uint256)": {
        "notice": "Collect platform fees (only platform contract)"
      },
      "createProposal(string,string)": {
        "notice": "Create governance proposal"
      },
      "distributeFees()": {
        "notice": "Distribute fees to token holders (simplified)"
      },
      "executeProposal(uint256)": {
        "notice": "Execute proposal (if passed)"
      },
      "getProposal(uint256)": {
        "notice": "Get proposal details"
      },
      "getUserStakes(address)": {
        "notice": "Get user's staking info"
      },
      "getVotingPower(address)": {
        "notice": "Get user's voting power"
      },
      "mint(address,uint256)": {
        "notice": "Mint tokens (only platform can mint as rewards)"
      },
      "setPlatformContract(address)": {
        "notice": "Set platform contract address"
      },
      "stake(uint256,uint256)": {
        "notice": "Stake tokens for governance power"
      },
      "transfer(address,uint256)": {
        "notice": "Transfer tokens"
      },
      "transferFrom(address,address,uint256)": {
        "notice": "Transfer from (for allowances)"
      },
      "unstake(uint256)": {
        "notice": "Unstake tokens (after lock period)"
      },
      "vote(uint256,bool)": {
        "notice": "Vote on proposal"
      }
    },
    "notice": "INCL Token - Governance token for MicroSavings platform Enables community governance and fee sharing",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3217,
        "contract": "contracts/INCLToken.sol:INCLToken",
        "label": "name",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 3220,
        "contract": "contracts/INCLToken.sol:INCLToken",
        "label": "symbol",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 3223,
        "contract": "contracts/INCLToken.sol:INCLToken",
        "label": "decimals",
        "offset": 0,
        "slot": "2",
        "type": "t_uint8"
      },
      {
        "astId": 3225,
        "contract": "contracts/INCLToken.sol:INCLToken",
        "label": "totalSupply",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 3229,
        "contract": "contracts/INCLToken.sol:INCLToken",
        "label": "platformContract",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 3233,
        "contract": "contracts/INCLToken.sol:INCLToken",
        "label": "balanceOf",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 3239,
        "contract": "contracts/INCLToken.sol:INCLToken",
        "label": "allowance",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 3254,
        "contract": "contracts/INCLToken.sol:INCLToken",
        "label": "userStakes",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_array(t_struct(Stake)3248_storage)dyn_storage)"
      },
      {
        "astId": 3258,
        "contract": "contracts/INCLToken.sol:INCLToken",
        "label": "totalStaked",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 3284,
        "contract": "contracts/INCLToken.sol:INCLToken",
        "label": "proposals",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_uint256,t_struct(Proposal)3279_storage)"
      },
      {
        "astId": 3290,
        "contract": "contracts/INCLToken.sol:INCLToken",
        "label": "hasVoted",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))"
      },
      {
        "astId": 3293,
        "contract": "contracts/INCLToken.sol:INCLToken",
        "label": "nextProposalId",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 3300,
        "contract": "contracts/INCLToken.sol:INCLToken",
        "label": "votingPowerThreshold",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      },
      {
        "astId": 3303,
        "contract": "contracts/INCLToken.sol:INCLToken",
        "label": "proposalDuration",
        "offset": 0,
        "slot": "13",
        "type": "t_uint256"
      },
      {
        "astId": 3306,
        "contract": "contracts/INCLToken.sol:INCLToken",
        "label": "totalFeesCollected",
        "offset": 0,
        "slot": "14",
        "type": "t_uint256"
      },
      {
        "astId": 3310,
        "contract": "contracts/INCLToken.sol:INCLToken",
        "label": "userFeeShare",
        "offset": 0,
        "slot": "15",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 3313,
        "contract": "contracts/INCLToken.sol:INCLToken",
        "label": "lastFeeDistribution",
        "offset": 0,
        "slot": "16",
        "type": "t_uint256"
      },
      {
        "astId": 3316,
        "contract": "contracts/INCLToken.sol:INCLToken",
        "label": "feeDistributionInterval",
        "offset": 0,
        "slot": "17",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Stake)3248_storage)dyn_storage": {
        "base": "t_struct(Stake)3248_storage",
        "encoding": "dynamic_array",
        "label": "struct INCLToken.Stake[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_struct(Stake)3248_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct INCLToken.Stake[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(Stake)3248_storage)dyn_storage"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_bool)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_struct(Proposal)3279_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct INCLToken.Proposal)",
        "numberOfBytes": "32",
        "value": "t_struct(Proposal)3279_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Proposal)3279_storage": {
        "encoding": "inplace",
        "label": "struct INCLToken.Proposal",
        "members": [
          {
            "astId": 3260,
            "contract": "contracts/INCLToken.sol:INCLToken",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 3262,
            "contract": "contracts/INCLToken.sol:INCLToken",
            "label": "proposer",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 3264,
            "contract": "contracts/INCLToken.sol:INCLToken",
            "label": "title",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 3266,
            "contract": "contracts/INCLToken.sol:INCLToken",
            "label": "description",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 3268,
            "contract": "contracts/INCLToken.sol:INCLToken",
            "label": "forVotes",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 3270,
            "contract": "contracts/INCLToken.sol:INCLToken",
            "label": "againstVotes",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 3272,
            "contract": "contracts/INCLToken.sol:INCLToken",
            "label": "startTime",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 3274,
            "contract": "contracts/INCLToken.sol:INCLToken",
            "label": "endTime",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 3276,
            "contract": "contracts/INCLToken.sol:INCLToken",
            "label": "executed",
            "offset": 0,
            "slot": "8",
            "type": "t_bool"
          },
          {
            "astId": 3278,
            "contract": "contracts/INCLToken.sol:INCLToken",
            "label": "isActive",
            "offset": 1,
            "slot": "8",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "288"
      },
      "t_struct(Stake)3248_storage": {
        "encoding": "inplace",
        "label": "struct INCLToken.Stake",
        "members": [
          {
            "astId": 3241,
            "contract": "contracts/INCLToken.sol:INCLToken",
            "label": "amount",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 3243,
            "contract": "contracts/INCLToken.sol:INCLToken",
            "label": "timestamp",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 3245,
            "contract": "contracts/INCLToken.sol:INCLToken",
            "label": "lockPeriod",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 3247,
            "contract": "contracts/INCLToken.sol:INCLToken",
            "label": "isActive",
            "offset": 0,
            "slot": "3",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}